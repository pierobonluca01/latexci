on: [push, pull_request]

env:
  REPO_NAME: latexci
  DISPLAY_NAME: Latex Continuous Integration

jobs:
  build_docs:
    runs-on: ubuntu-latest
    name: Build Documents
    steps:
      - name: üöß Set up Git repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: ‚öô Build LaTeX files
        run: |
          docker run -i --rm -v "$(pwd)/:/work" -w /work ghcr.io/xu-cheng/texlive-full bash -c '
            shopt -s globstar
            set -e
            for d_path in ./**/d_*.tex; do (
              cd "$(dirname $d_path)"
              latexmk -lualatex $(basename $d_path)
            ) done'
            
      - name: üñãÔ∏è Append version to pdf files
        run: |
          shopt -s globstar
          set -e
          for d_path in ./**/d_*.tex; do (
            cd "$(dirname $d_path)"
            grep -Prioh --include='d_*.tex' 'v\d+\.\d+\.\d+'
          ) done
            
      - name: üß¨ Generate artifact containing PDF files
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}
          path: "**/d_*.pdf"

  build_ghpages:
    runs-on: ubuntu-latest
    name: Build GitHub Pages
    needs: build_docs
    steps:
      - name: üöß Set up Git repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
      
      - name: ‚¨á Download artifact ${{ env.REPO_NAME }}
        uses: actions/download-artifact@v3.0.1
        with:
          name: ${{ env.REPO_NAME }}
          path: ./${{ env.REPO_NAME }}
      
      - name: ‚úç Remove prefix d_ in PDF files
        run: find ./${{ env.REPO_NAME }} -type f -name 'd_*.pdf' | while read f; do mv "$f" "${f/d_/}"; done

      - name: ‚öí Install apindex and update HTML template
        run: |
          git clone --depth=1 https://github.com/paperbenni/apindex.git
          cd apindex
          rm share/apindex/index.template.html
          curl -o share/apindex/index.template.html https://raw.githubusercontent.com/pierobonluca01/latexci/master/.github/workflows/ghpages_template.html
          sed -i "34d; 35i ${{ env.DISPLAY_NAME }}" share/apindex/index.template.html
          cmake . -DCMAKE_INSTALL_PREFIX=/usr
          sudo make install
          cd ..
          rm -rf apindex
        
      - name: ‚öô Build static page
        run: apindex ./${{ env.REPO_NAME }}
        
      - name: üß¨ Generate artifact containing Directory Listings Page
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}_html
          path: ./${{ env.REPO_NAME }}

  deploy_ghpages:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: Deploy GitHub Pages
    needs: [build_docs, build_ghpages]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: ‚¨á Download artifact ${{ env.REPO_NAME }}_html
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}_html
          path: ./html
      
      - name: üöß Setup Github Pages
        uses: actions/configure-pages@v2
      
      - name: üß¨ Generate github-pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./html
      
      - name: ‚¨Ü Deploy artifact to GitHub Pages
        uses: actions/deploy-pages@v1

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    name: Release
    needs: build_docs
    steps:
      - name: ‚¨á Download artifact ${{ env.REPO_NAME }}
        uses: actions/download-artifact@v3.0.1
        with:
          name: ${{ env.REPO_NAME }}
          path: ./${{ env.REPO_NAME }}
      
      - name: ‚úç Remove prefix d_ in PDF files
        run: find ./${{ env.REPO_NAME }} -type f -name 'd_*.pdf' | while read f; do mv "$f" "${f/"/d_"/"/"}"; done
        
      - name: ü§ê Generate ZIP archive
        run: zip -r ${{ env.REPO_NAME }}.zip ${{ env.REPO_NAME }}
     
      - name: üéÅ Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.REPO_NAME }}.zip
