on: [push, pull_request]

jobs:
  build_docs:
    runs-on: ubuntu-latest
    name: Build Documents
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
      
      - name: Build LaTeX files
        run: |
          docker run -i --rm -v "$(pwd)/:/work" -w /work ghcr.io/xu-cheng/texlive-full bash -c '
            shopt -s globstar
            set -e
            for d_path in ./**/d_*.tex; do (
              cd "$(dirname $d_path)"
              latexmk -lualatex $(basename $d_path)
            ) done'
            
      - name: Generate artifact containing PDF files
        uses: actions/upload-artifact@v3
        with:
          name: documentazione
          path: "**/*.pdf"
  
  build_ghpages:
    runs-on: ubuntu-latest
    name: Build GitHub Pages
    needs: build_docs
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: documentazione
          path: ./artifact

      - name: Install apindex
        run: |
          git clone --depth=1 https://github.com/paperbenni/apindex.git
          cd apindex
          sed -i '3i \\t<title>Percorso attuale: #TITLE</title>' share/apindex/index.template.html
          sed -i '9i \\thtml, body {font-family: "Times New Roman", serif; color: white; background-color: rgb(13, 17, 23);}' share/apindex/index.template.html
          sed -i '14d; 14i \\t<h1>Percorso attuale: #DIR</h1>' share/apindex/index.template.html
          sed -i '22d; 21i \\t<th align="left">Nome del file</th>' share/apindex/index.template.html
          sed -i '29d; 30d; 31d' share/apindex/index.template.html
          cat share/apindex/index.template.html
          cmake . -DCMAKE_INSTALL_PREFIX=/usr
          sudo make install
          cd ..
          rm -rf apindex
        
      - name: Generate static page
        run: apindex ./artifact
        
      - name: Generate artifact containing Directory Listings Page
        uses: actions/upload-artifact@v3
        with:
          name: documentazione_page
          path: ./artifact
  
  deploy_ghpages:
    runs-on: ubuntu-latest
    name: Deploy GitHub Pages
    needs: [build_docs, build_ghpages]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: documentazione_page
          path: ./page
      
      - name: Setup Pages
        uses: actions/configure-pages@v2
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./page
      
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
